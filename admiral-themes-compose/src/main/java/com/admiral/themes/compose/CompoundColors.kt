package com.admiral.themes.compose

import androidx.compose.material.Colors
import androidx.compose.ui.graphics.Color

@Suppress("MagicNumber")
val admiralLightColorPalette = AdmiralColors(
    backgroundBasic = AdmiralPalette.admiralWhiteLight,
    backgroundAdditionalOne = AdmiralPalette.admiralGrey05Light,
    backgroundAdditionalOnePressed = AdmiralPalette.admiralGrey10Light,
    backgroundAdditionalTwo = AdmiralPalette.admiralGrey10Light,
    backgroundAdditionalTwoPressed = AdmiralPalette.admiralGrey20Light,
    backgroundModalView = AdmiralPalette.admiralGrey90Light,
    backgroundModalControl = AdmiralPalette.admiralWhiteLight,
    backgroundAccent = AdmiralPalette.admiralBlue60Light,
    backgroundAccentTwo = AdmiralPalette.admiralBlue70Light,
    backgroundAccentPressed = AdmiralPalette.admiralBlue70Light,
    backgroundSelected = AdmiralPalette.admiralBlue10Light,
    backgroundSelectedPressed = AdmiralPalette.admiralBlue20Light,
    backgroundAccentDark = AdmiralPalette.admiralBlue100Light,
    backgroundError = AdmiralPalette.admiralRed10Light,
    backgroundErrorPressed = AdmiralPalette.admiralRed20Light,
    backgroundSuccess = AdmiralPalette.admiralGreen10Light,
    backgroundSuccessPressed = AdmiralPalette.admiralGreen20Light,
    backgroundAttention = AdmiralPalette.admiralOrange10Light,
    backgroundAttentionPressed = AdmiralPalette.admiralOrange20Light,
    backgroundSecondary = AdmiralPalette.admiralGrey70Light,
    backgroundExtraSurface = AdmiralPalette.admiralBlue100Light,
    backgroundShadow = AdmiralPalette.admiralGrey80Light.withAlpha(),

    textPrimary = AdmiralPalette.admiralGrey90Light,
    textSecondary = AdmiralPalette.admiralGrey40Light,
    textAdditional = AdmiralPalette.admiralGrey70Light,
    textMask = AdmiralPalette.admiralGrey20Light,
    textStaticWhite = AdmiralPalette.admiralWhiteLight,
    textContrast = AdmiralPalette.admiralWhiteLight,
    textAccent = AdmiralPalette.admiralBlue60Light,
    textAccentPressed = AdmiralPalette.admiralBlue70Light,
    textAccentAdditional = AdmiralPalette.admiralBlue30Light,
    textError = AdmiralPalette.admiralRed60Light,
    textErrorPressed = AdmiralPalette.admiralRed70Light,
    textSuccess = AdmiralPalette.admiralGreen60Light,
    textSuccessPressed = AdmiralPalette.admiralGreen70Light,
    textAttention = AdmiralPalette.admiralOrange60Light,
    textAttentionPressed = AdmiralPalette.admiralOrange70Light,

    elementPrimary = AdmiralPalette.admiralGrey40Light,
    elementSecondary = AdmiralPalette.admiralGrey70Light,
    elementBarDivider = AdmiralPalette.admiralWhiteLight.withAlpha(0f),
    elementAdditional = AdmiralPalette.admiralGrey10Light,
    elementStaticWhite = AdmiralPalette.admiralWhiteLight,
    elementContrast = AdmiralPalette.admiralWhiteLight,
    elementExtra = AdmiralPalette.admiralGrey40Light,
    elementAccent = AdmiralPalette.admiralBlue60Light,
    elementAccentPressed = AdmiralPalette.admiralBlue60Light,
    elementAccentAdditional = AdmiralPalette.admiralBlue30Light,
    elementError = AdmiralPalette.admiralRed60Light,
    elementErrorPressed = AdmiralPalette.admiralRed70Light,
    elementSuccess = AdmiralPalette.admiralGreen60Light,
    elementSuccessPressed = AdmiralPalette.admiralGreen70Light,
    elementAttention = AdmiralPalette.admiralOrange60Light,
    elementAttentionPressed = AdmiralPalette.admiralOrange70Light,

    specialExtra01 = AdmiralPalette.admiralVioletLight,
    specialExtra02 = AdmiralPalette.admiralViolet,
    specialExtra03 = AdmiralPalette.admiralVioletDeep,
    specialExtra04 = AdmiralPalette.admiralFuchsia,
    specialExtra05 = AdmiralPalette.admiralFuchsiaDeep,
    specialExtra06 = AdmiralPalette.admiralYellow,
    specialExtra07 = AdmiralPalette.admiralOrangeLight,
    specialExtra08 = AdmiralPalette.admiralOrange,
    specialExtra09 = AdmiralPalette.admiralOrangeDeep,
    specialExtra10 = AdmiralPalette.admiralGreenLight,
    specialExtra11 = AdmiralPalette.admiralGreen,
    specialExtra12 = AdmiralPalette.admiralTiffany,
    specialExtra13 = AdmiralPalette.admiralTiffanyDeep,
    specialExtra14 = AdmiralPalette.admiralTiffanyDark,
    specialExtra15 = AdmiralPalette.admiralTiffanyBlue,
    specialExtra16 = AdmiralPalette.admiralBlueLight,
    specialExtra17 = AdmiralPalette.admiralBlue,
    specialExtra18 = AdmiralPalette.admiralBlueDeep,
    specialExtra19 = AdmiralPalette.admiralSoftBlue,
    specialExtra20 = AdmiralPalette.admiralSoftSkyBlue,
    specialExtra21 = AdmiralPalette.admiralSoftTiffany,
    specialExtra22 = AdmiralPalette.admiralSoftGreen,
    specialExtra23 = AdmiralPalette.admiralSoftPurple,
    specialExtra24 = AdmiralPalette.admiralSoftPink,
    specialExtra25 = AdmiralPalette.admiralSoftRed,
    specialExtra26 = AdmiralPalette.admiralSoftPapaya,
    specialExtra27 = AdmiralPalette.admiralSoftYellow,
)

@Suppress("MagicNumber")
val admiralDarkColorPalette = AdmiralColors(
    backgroundBasic = AdmiralPalette.admiralGrey00Dark,
    backgroundAdditionalOne = AdmiralPalette.admiralGrey05Dark,
    backgroundAdditionalOnePressed = AdmiralPalette.admiralGrey10Dark,
    backgroundAdditionalTwo = AdmiralPalette.admiralGrey10Dark,
    backgroundAdditionalTwoPressed = AdmiralPalette.admiralGrey20Dark,
    backgroundModalView = AdmiralPalette.admiralGrey90Dark,
    backgroundModalControl = AdmiralPalette.admiralWhiteDark.withAlpha(0.5f),
    backgroundAccent = AdmiralPalette.admiralBlue60Light,
    backgroundAccentTwo = AdmiralPalette.admiralBlue70Dark,
    backgroundAccentPressed = AdmiralPalette.admiralBlue70Dark,
    backgroundSelected = AdmiralPalette.admiralBlue10Dark,
    backgroundSelectedPressed = AdmiralPalette.admiralBlue20Dark,
    backgroundAccentDark = AdmiralPalette.admiralBlue100Dark,
    backgroundError = AdmiralPalette.admiralRed10Dark,
    backgroundErrorPressed = AdmiralPalette.admiralRed20Dark,
    backgroundSuccess = AdmiralPalette.admiralGreen10Dark,
    backgroundSuccessPressed = AdmiralPalette.admiralGreen20Dark,
    backgroundAttention = AdmiralPalette.admiralOrange10Dark,
    backgroundAttentionPressed = AdmiralPalette.admiralOrange20Dark,
    backgroundSecondary = AdmiralPalette.admiralGrey70Dark,
    backgroundExtraSurface = AdmiralPalette.admiralBlue100Dark,
    backgroundShadow = AdmiralPalette.admiralGrey80Dark.withAlpha(0.3f),

    textPrimary = AdmiralPalette.admiralGrey90Dark,
    textSecondary = AdmiralPalette.admiralGrey40Dark,
    textAdditional = AdmiralPalette.admiralGrey70Dark,
    textMask = AdmiralPalette.admiralGrey20Dark,
    textStaticWhite = AdmiralPalette.admiralWhiteDark,
    textContrast = AdmiralPalette.admiralWhiteDark,
    textAccent = AdmiralPalette.admiralBlue60Dark,
    textAccentPressed = AdmiralPalette.admiralBlue70Dark,
    textAccentAdditional = AdmiralPalette.admiralBlue30Dark,
    textError = AdmiralPalette.admiralRed60Dark,
    textErrorPressed = AdmiralPalette.admiralRed70Dark,
    textSuccess = AdmiralPalette.admiralGreen60Dark,
    textSuccessPressed = AdmiralPalette.admiralGreen70Dark,
    textAttention = AdmiralPalette.admiralOrange60Dark,
    textAttentionPressed = AdmiralPalette.admiralOrange70Dark,

    elementPrimary = AdmiralPalette.admiralGrey40Dark,
    elementSecondary = AdmiralPalette.admiralGrey70Dark,
    elementBarDivider = AdmiralPalette.admiralWhiteDark.withAlpha(0f),
    elementAdditional = AdmiralPalette.admiralGrey10Dark,
    elementStaticWhite = AdmiralPalette.admiralWhiteDark,
    elementContrast = AdmiralPalette.admiralWhiteDark,
    elementExtra = AdmiralPalette.admiralWhiteDark,
    elementAccent = AdmiralPalette.admiralBlue60Dark,
    elementAccentPressed = AdmiralPalette.admiralBlue60Dark,
    elementAccentAdditional = AdmiralPalette.admiralBlue30Dark,
    elementError = AdmiralPalette.admiralRed60Dark,
    elementErrorPressed = AdmiralPalette.admiralRed70Dark,
    elementSuccess = AdmiralPalette.admiralGreen60Dark,
    elementSuccessPressed = AdmiralPalette.admiralGreen70Dark,
    elementAttention = AdmiralPalette.admiralOrange60Dark,
    elementAttentionPressed = AdmiralPalette.admiralOrange70Dark,

    specialExtra01 = AdmiralPalette.admiralVioletLight,
    specialExtra02 = AdmiralPalette.admiralViolet,
    specialExtra03 = AdmiralPalette.admiralVioletDeep,
    specialExtra04 = AdmiralPalette.admiralFuchsia,
    specialExtra05 = AdmiralPalette.admiralFuchsiaDeep,
    specialExtra06 = AdmiralPalette.admiralYellow,
    specialExtra07 = AdmiralPalette.admiralOrangeLight,
    specialExtra08 = AdmiralPalette.admiralOrange,
    specialExtra09 = AdmiralPalette.admiralOrangeDeep,
    specialExtra10 = AdmiralPalette.admiralGreenLight,
    specialExtra11 = AdmiralPalette.admiralGreen,
    specialExtra12 = AdmiralPalette.admiralTiffany,
    specialExtra13 = AdmiralPalette.admiralTiffanyDeep,
    specialExtra14 = AdmiralPalette.admiralTiffanyDark,
    specialExtra15 = AdmiralPalette.admiralTiffanyBlue,
    specialExtra16 = AdmiralPalette.admiralBlueLight,
    specialExtra17 = AdmiralPalette.admiralBlue,
    specialExtra18 = AdmiralPalette.admiralBlueDeep,
    specialExtra19 = AdmiralPalette.admiralSoftBlue,
    specialExtra20 = AdmiralPalette.admiralSoftSkyBlue,
    specialExtra21 = AdmiralPalette.admiralSoftTiffany,
    specialExtra22 = AdmiralPalette.admiralSoftGreen,
    specialExtra23 = AdmiralPalette.admiralSoftPurple,
    specialExtra24 = AdmiralPalette.admiralSoftPink,
    specialExtra25 = AdmiralPalette.admiralSoftRed,
    specialExtra26 = AdmiralPalette.admiralSoftPapaya,
    specialExtra27 = AdmiralPalette.admiralSoftYellow,
)

/**
 * A Material [Colors] implementation which sets all colors to [debugColor] to discourage usage of
 * [MaterialTheme.colors] in preference to [AdmiralTheme.colors].
 */
fun debugColors(
    darkTheme: Boolean,
    debugColor: Color = Color.Magenta
) = Colors(
    primary = debugColor,
    primaryVariant = debugColor,
    onPrimary = debugColor,
    secondary = debugColor,
    secondaryVariant = debugColor,
    onSecondary = debugColor,
    background = debugColor,
    onBackground = debugColor,
    surface = debugColor,
    onSurface = debugColor,
    error = debugColor,
    onError = debugColor,
    isLight = !darkTheme
)