name: Build Demo Release APK
on:
  push:
    branches: [ 'main' ]
  pull_request_target:
    types: [ 'opened', 'synchronize', 'reopened', 'edited' ]
    branches: [ 'main', 'develop', 'rc/**' ]
jobs:
  approve: # First step
    runs-on: [ self-hosted, main, android ]

    steps:
      - name: Approve
        run: echo For security reasons, all pull requests need to be approved first before running any automated CI.

  prepare:
    runs-on: [ self-hosted, main, android ]
    needs: [ approve ]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Prepare keystore files
        run: |
          cp $GITHUB_WORKSPACE/../../setup_files/keystore/keystore_release.properties $GITHUB_WORKSPACE/keystore_release.properties
          cp $GITHUB_WORKSPACE/../../setup_files/keystore/release.keystore $GITHUB_WORKSPACE/release.keystore

  detect:
    runs-on: [ self-hosted, main, android ]
    needs: [ prepare ]

    steps:
      - name: Detect
        run: |
          chmod +x gradlew
          ./gradlew detekt
  test:
    runs-on: [ self-hosted, main, android ]
    needs: [ detect ]

    steps:
      - name: Run snapshot tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          force-avd-creation: false
          avd-name: Pixel_4_API_30
          arch: x86_64
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -no-audio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            chmod +x gradlew
            ./gradlew demo:executeScreenshotTests

  build:
    runs-on: [ self-hosted, main, android ]
    needs: [ test ]

    steps:
      - name: Build demo release apk
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease

  release:
    runs-on: [ self-hosted, main, android ]
    needs: [ build ]

    steps:
      - name: Upload apk to Firebase
        run: |
          chmod +x gradlew
          ./gradlew updateReleaseNotesTask --releaseNotes='commits_url = ${{ toJSON(github.event.pull_request.commits_url) }} , branch = ${{ github.head_ref || github.ref_name }}'
          ./gradlew appDistributionUploadRelease 

      - name: Upload release artifacts to Github Packages
        continue-on-error: true
        if: ${{ github.event_name == 'push' }}
        env:
          CI_GITHUB_USERNAME: ${{ github.actor }}
          CI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x gradlew
          ./gradlew publish -PrepositoryType="Github"

      - name: Add Nexus publishing certs
        uses: ./.github/actions/add-nexus-publishing-certs
        if: ${{ github.event_name == 'push' }}
        with:
          certs_store_pass: ${{ secrets.CERTS_STORE_PASS }}

      - name: Upload release artifacts to Nexus
        continue-on-error: true
        if: ${{ github.event_name == 'push' }}
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          chmod +x gradlew
          ./gradlew publish -PrepositoryType="Nexus"