name: Build Demo Release APK
on:
  push:
    branches: [ 'main' ]
  pull_request_target:
    types: [ 'opened', 'synchronize', 'reopened', 'edited' ]
    branches: [ 'main', 'develop', 'rc/**' ]
jobs:
  release:
    runs-on: [ self-hosted, main, android ]

    steps:
      - name: Export one variable
        uses: UnlyEd/github-action-store-variable@v2.1.0
        with:
          variables: FOO=BAR

      - name: Print variable
        uses: UnlyEd/github-action-store-variable@v2.1.0
        with:
          variables: FOO
        run: |
          echo "$FOO" 

      - name: Get repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
        variables: |
          MAGIC_NUMBER="$(git show -s --format=%s)" 

      - name: Print head git commit message
        run: |
          echo "$(git show -s --format=%s)" 

      - name: Set new value
        uses: UnlyEd/github-action-store-variable@v2.1.0
        with:
          variables: FOO
        run: |
          echo "$FOO" 


      - name: Upload apk to Firebase
        run: |
          chmod +x gradlew
          ./gradlew updateReleaseNotesTask --releaseNotes='${{ (git show -s --format=%s) }}" , branch = ${{ github.head_ref || github.ref_name }}'
          ./gradlew appDistributionUploadRelease 

      - name: Upload release artifacts to Github Packages
        continue-on-error: true
        if: ${{ github.event_name == 'push' }}
        env:
          CI_GITHUB_USERNAME: ${{ github.actor }}
          CI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x gradlew
          ./gradlew publish -PrepositoryType="Github"

      - name: Add Nexus publishing certs
        uses: ./.github/actions/add-nexus-publishing-certs
        if: ${{ github.event_name == 'push' }}
        with:
          certs_store_pass: ${{ secrets.CERTS_STORE_PASS }}

      - name: Upload release artifacts to Nexus
        continue-on-error: true
        if: ${{ github.event_name == 'push' }}
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          chmod +x gradlew
          ./gradlew publish -PrepositoryType="Nexus"